<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.MsgQueueMapper">

    <delete id="deleteById">
        DELETE FROM ndes_msg_queue WHERE id = #{id}
    </delete>

    <delete id="deleteAborted">
        DELETE FROM ndes_msg_queue WHERE next_retry_time = #{nextRetryTime} AND update_time &lt; #{limitTime}
    </delete>

    <insert id="insert">
        INSERT INTO ndes_msg_queue(`biz_key`, `topic`, `msg_content`, `retried_times`, `next_retry_time`, `locked`, `create_time`, `update_time`)
        VALUES (#{bizKey}, #{topic}, #{msgContent}, #{retriedTimes}, #{nextRetryTime}, #{locked}, #{createTime}, #{updateTime})
    </insert>

    <select id="select" resultType="com.qf.ndes.entity.MsgPo">
        SELECT
        `id`,
        `biz_key` as bizKey,
        `topic`,
        `msg_content` as msgContent,
        `retried_times` as retriedTimes,
        `next_retry_time` as nextRetryTime,
        `locked`,
        `create_time` as createTime,
        `update_time` as updateTime
        FROM ndes_msg_queue
        <where>
            <if test="topics != null">
                topic in (
                <foreach collection="topics" separator="," item="t">
                    #{t}
                </foreach>
                )
            </if>
            <if test="nextRetryTimeLT != null">
                AND next_retry_time &lt; #{nextRetryTimeLT}
            </if>
            <if test="locked != null">
                AND locked = #{locked}
            </if>
        </where>
        ORDER BY `id` DESC
        LIMIT #{batchSize}
    </select>

    <update id="update">
        UPDATE ndes_msg_queue
        <set>
            <if test="u.retriedTimes != null">
                retried_times = #{u.retriedTimes},
            </if>
            <if test="u.nextRetryTime != null">
                next_retry_time = #{u.nextRetryTime},
            </if>
            <if test="u.locked != null">
                locked = #{u.locked},
            </if>
            <if test="u.updateTime != null">
                update_time = #{u.updateTime},
            </if>
        </set>
        <where>
            <if test="c.id != null">
                AND id = #{c.id}
            </if>
            <if test="c.updateTime != null">
                AND update_time = #{c.updateTime}
            </if>
            <if test="c.updateTimeLT != null">
                AND update_time &lt; #{c.updateTimeLT}
            </if>
            <if test="c.locked != null">
                AND locked = #{c.locked}
            </if>
            <if test="c.nextRetryTime != null">
                AND next_retry_time = #{c.nextRetryTime}
            </if>
        </where>
    </update>
</mapper>